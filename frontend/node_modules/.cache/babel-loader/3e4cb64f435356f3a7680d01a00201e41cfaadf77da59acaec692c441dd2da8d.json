{"ast":null,"code":"var _jsxFileName = \"/home/aj/eclipse-workspace/mern-stack-crud/src/Components/edit-student.component.js\",\n  _s = $RefreshSig$();\n//src/Components/edit-student.component.js\n\n// EditStudent Component for update student data\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\";\nimport { useParams } from 'react-router-dom';\n\n// EditStudent Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditStudent = props => {\n  _s();\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    email: \"\",\n    rollno: \"\"\n  });\n\n  //onSubmit handler\n  const onSubmit = studentObject => {\n    axios.put(\"http://localhost:4000/students/students/\" + props.match.params.id, studentObject).then(res => {\n      if (res.status === 200) {\n        alert(\"Student successfully updated\");\n        props.history.push(\"/student-list\");\n      } else Promise.reject();\n    }).catch(err => alert(\"Something went wrong\"));\n  };\n\n  // Load data from server and reinitialize student form\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/students/update-student/\" + props.match.params.id).then(res => {\n      const {\n        name,\n        email,\n        rollno\n      } = res.data;\n      setFormValues({\n        name,\n        email,\n        rollno\n      });\n    }).catch(err => console.log(err));\n  }, []);\n\n  // Return student form\n  return /*#__PURE__*/_jsxDEV(StudentForm, {\n    initialValues: formValues,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    children: \"Update Student\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n// Export EditStudent Component\n_s(EditStudent, \"r6PYVZL8ZGH5ik8lxMSsvYq/TfE=\");\n_c = EditStudent;\nexport default EditStudent;\nvar _c;\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"names":["React","useState","useEffect","axios","StudentForm","useParams","jsxDEV","_jsxDEV","EditStudent","props","_s","formValues","setFormValues","name","email","rollno","onSubmit","studentObject","put","match","params","id","then","res","status","alert","history","push","Promise","reject","catch","err","get","data","console","log","initialValues","enableReinitialize","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aj/eclipse-workspace/mern-stack-crud/src/Components/edit-student.component.js"],"sourcesContent":["//src/Components/edit-student.component.js\n\n// EditStudent Component for update student data\n// Import Modules\nimport React,\n{\n    useState,\n    useEffect\n} from \"react\";\nimport axios from \"axios\";\nimport StudentForm\n    from \"./StudentForm\";\n\nimport { useParams } from 'react-router-dom';\n\n// EditStudent Component\nconst EditStudent = (props) => {\n    const [formValues, setFormValues] =\n        useState(\n            {\n                name: \"\",\n                email: \"\",\n                rollno: \"\",\n            }\n        );\n\n    //onSubmit handler\n    const onSubmit = (studentObject) => {\n        axios\n            .put(\n\"http://localhost:4000/students/students/\" +\n                props.match.params.id,\n                studentObject\n            )\n            .then((res) => {\n                if (res.status === 200) {\n                    alert(\"Student successfully updated\");\n                    props.history.push(\"/student-list\");\n                } else Promise.reject();\n            })\n            .catch(\n                (err) =>\n                    alert(\"Something went wrong\")\n            );\n    };\n\n    // Load data from server and reinitialize student form\n    useEffect(() => {\n        axios\n            .get(\n\"http://localhost:4000/students/update-student/\"\n                + props.match.params.id\n            )\n            .then((res) => {\n                const {\n                    name,\n                    email,\n                    rollno\n                } = res.data;\n                setFormValues(\n                    {\n                        name,\n                        email,\n                        rollno\n                    });\n            })\n            .catch(\n                (err) =>\n                    console.log(err)\n            );\n    }, []);\n\n    // Return student form\n    return (\n        <StudentForm\n            initialValues={formValues}\n            onSubmit={onSubmit}\n            enableReinitialize>\n            Update Student\n        </StudentForm>\n    );\n};\n\n// Export EditStudent Component\nexport default EditStudent;"],"mappings":";;AAAA;;AAEA;AACA;AACA,OAAOA,KAAK,IAERC,QAAQ,EACRC,SAAS,QACN,OAAO;AACd,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MACT,eAAe;AAExB,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAC7BX,QAAQ,CACJ;IACIY,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ,CACJ,CAAC;;EAEL;EACA,MAAMC,QAAQ,GAAIC,aAAa,IAAK;IAChCd,KAAK,CACAe,GAAG,CAChB,0CAA0C,GAC1BT,KAAK,CAACU,KAAK,CAACC,MAAM,CAACC,EAAE,EACrBJ,aACJ,CAAC,CACAK,IAAI,CAAEC,GAAG,IAAK;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACpBC,KAAK,CAAC,8BAA8B,CAAC;QACrChB,KAAK,CAACiB,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;MACvC,CAAC,MAAMC,OAAO,CAACC,MAAM,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CACDC,GAAG,IACAN,KAAK,CAAC,sBAAsB,CACpC,CAAC;EACT,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACZC,KAAK,CACA6B,GAAG,CAChB,gDAAgD,GAC9BvB,KAAK,CAACU,KAAK,CAACC,MAAM,CAACC,EACzB,CAAC,CACAC,IAAI,CAAEC,GAAG,IAAK;MACX,MAAM;QACFV,IAAI;QACJC,KAAK;QACLC;MACJ,CAAC,GAAGQ,GAAG,CAACU,IAAI;MACZrB,aAAa,CACT;QACIC,IAAI;QACJC,KAAK;QACLC;MACJ,CAAC,CAAC;IACV,CAAC,CAAC,CACDe,KAAK,CACDC,GAAG,IACAG,OAAO,CAACC,GAAG,CAACJ,GAAG,CACvB,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACIxB,OAAA,CAACH,WAAW;IACRgC,aAAa,EAAEzB,UAAW;IAC1BK,QAAQ,EAAEA,QAAS;IACnBqB,kBAAkB;IAAAC,QAAA,EAAC;EAEvB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC;AAEtB,CAAC;;AAED;AAAAhC,EAAA,CAnEMF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAoEjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}